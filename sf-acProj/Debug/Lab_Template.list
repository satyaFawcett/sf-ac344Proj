
Lab_Template.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000184  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000000fc  08000184  08000184  00001184  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000280  08000288  00001288  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000280  08000280  00001288  2**0
                  CONTENTS
  4 .ARM          00000000  08000280  08000280  00001288  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000280  08000288  00001288  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000280  08000280  00001280  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000284  08000284  00001284  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001288  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .sram2        00000000  10000000  10000000  00001288  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001288  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000c5  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000006b  00000000  00000000  0000137d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000013e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  00001430  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0001cf76  00000000  00000000  0000145c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000668  00000000  00000000  0001e3d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000a1a72  00000000  00000000  0001ea3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  000c04ac  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000054  00000000  00000000  000c04f0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000050  00000000  00000000  000c0544  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	@ (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4b04      	ldr	r3, [pc, #16]	@ (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b113      	cbz	r3, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2301      	movs	r3, #1
 8000198:	7023      	strb	r3, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	20000000 	.word	0x20000000
 80001a0:	00000000 	.word	0x00000000
 80001a4:	08000268 	.word	0x08000268

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b03      	ldr	r3, [pc, #12]	@ (80001b8 <frame_dummy+0x10>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4903      	ldr	r1, [pc, #12]	@ (80001bc <frame_dummy+0x14>)
 80001b0:	4803      	ldr	r0, [pc, #12]	@ (80001c0 <frame_dummy+0x18>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	bd08      	pop	{r3, pc}
 80001b8:	00000000 	.word	0x00000000
 80001bc:	20000004 	.word	0x20000004
 80001c0:	08000268 	.word	0x08000268

080001c4 <main>:
/* USER CODE END FP */



int main(void)
{
 80001c4:	b480      	push	{r7}
 80001c6:	af00      	add	r7, sp, #0



  /* Infinite loop */
 /* USER CODE BEGIN WHILE */
  while (1)
 80001c8:	bf00      	nop
 80001ca:	e7fd      	b.n	80001c8 <main+0x4>

080001cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001cc:	480d      	ldr	r0, [pc, #52]	@ (8000204 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80001d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80001d4:	480c      	ldr	r0, [pc, #48]	@ (8000208 <LoopForever+0x6>)
  ldr r1, =_edata
 80001d6:	490d      	ldr	r1, [pc, #52]	@ (800020c <LoopForever+0xa>)
  ldr r2, =_sidata
 80001d8:	4a0d      	ldr	r2, [pc, #52]	@ (8000210 <LoopForever+0xe>)
  movs r3, #0
 80001da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80001dc:	e002      	b.n	80001e4 <LoopCopyDataInit>

080001de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80001de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80001e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80001e2:	3304      	adds	r3, #4

080001e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80001e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80001e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80001e8:	d3f9      	bcc.n	80001de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80001ea:	4a0a      	ldr	r2, [pc, #40]	@ (8000214 <LoopForever+0x12>)
  ldr r4, =_ebss
 80001ec:	4c0a      	ldr	r4, [pc, #40]	@ (8000218 <LoopForever+0x16>)
  movs r3, #0
 80001ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80001f0:	e001      	b.n	80001f6 <LoopFillZerobss>

080001f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80001f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80001f4:	3204      	adds	r2, #4

080001f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80001f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80001f8:	d3fb      	bcc.n	80001f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80001fa:	f000 f811 	bl	8000220 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80001fe:	f7ff ffe1 	bl	80001c4 <main>

08000202 <LoopForever>:

LoopForever:
  b LoopForever
 8000202:	e7fe      	b.n	8000202 <LoopForever>
  ldr   r0, =_estack
 8000204:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000208:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800020c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000210:	08000288 	.word	0x08000288
  ldr r2, =_sbss
 8000214:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000218:	2000001c 	.word	0x2000001c

0800021c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800021c:	e7fe      	b.n	800021c <ADC1_2_IRQHandler>
	...

08000220 <__libc_init_array>:
 8000220:	b570      	push	{r4, r5, r6, lr}
 8000222:	4d0d      	ldr	r5, [pc, #52]	@ (8000258 <__libc_init_array+0x38>)
 8000224:	4c0d      	ldr	r4, [pc, #52]	@ (800025c <__libc_init_array+0x3c>)
 8000226:	1b64      	subs	r4, r4, r5
 8000228:	10a4      	asrs	r4, r4, #2
 800022a:	2600      	movs	r6, #0
 800022c:	42a6      	cmp	r6, r4
 800022e:	d109      	bne.n	8000244 <__libc_init_array+0x24>
 8000230:	4d0b      	ldr	r5, [pc, #44]	@ (8000260 <__libc_init_array+0x40>)
 8000232:	4c0c      	ldr	r4, [pc, #48]	@ (8000264 <__libc_init_array+0x44>)
 8000234:	f000 f818 	bl	8000268 <_init>
 8000238:	1b64      	subs	r4, r4, r5
 800023a:	10a4      	asrs	r4, r4, #2
 800023c:	2600      	movs	r6, #0
 800023e:	42a6      	cmp	r6, r4
 8000240:	d105      	bne.n	800024e <__libc_init_array+0x2e>
 8000242:	bd70      	pop	{r4, r5, r6, pc}
 8000244:	f855 3b04 	ldr.w	r3, [r5], #4
 8000248:	4798      	blx	r3
 800024a:	3601      	adds	r6, #1
 800024c:	e7ee      	b.n	800022c <__libc_init_array+0xc>
 800024e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000252:	4798      	blx	r3
 8000254:	3601      	adds	r6, #1
 8000256:	e7f2      	b.n	800023e <__libc_init_array+0x1e>
 8000258:	08000280 	.word	0x08000280
 800025c:	08000280 	.word	0x08000280
 8000260:	08000280 	.word	0x08000280
 8000264:	08000284 	.word	0x08000284

08000268 <_init>:
 8000268:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800026a:	bf00      	nop
 800026c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800026e:	bc08      	pop	{r3}
 8000270:	469e      	mov	lr, r3
 8000272:	4770      	bx	lr

08000274 <_fini>:
 8000274:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000276:	bf00      	nop
 8000278:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800027a:	bc08      	pop	{r3}
 800027c:	469e      	mov	lr, r3
 800027e:	4770      	bx	lr
